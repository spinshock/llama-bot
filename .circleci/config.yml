version: 2.1

executors:
  llama-bot-docker-executor:
    docker:
      - image: cimg/node:16.13.0
    working_directory: ~/llama-bot-discord/llama-bot
  llama-bot-api-docker-executor:
    docker:
      - image: cimg/node:16.13.0
    working_directory: ~/llama-bot-discord/llama-bot-api

jobs:
  # llama-bot
  llama-bot-install:
    executor: llama-bot-docker-executor
    steps:
      - checkout:
          path: ~/llama-bot-discord
      # Try to restore dependencies from cache
      - restore_cache:
          keys:
            - llama-bot-nodemodules-v1-{{ checksum "package-lock.json" }}
            - llama-bot-nodemodules-v1-
      - run:
          name: Install dependencies
          command: npm install
      # Update dependencies cache
      - save_cache:
          key: llama-bot-nodemodules-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Save current workflow installed state in cache
      # .Environment.CIRCLE_SHA1 makes it unique for each build
      - save_cache:
          key: llama-bot-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./
  llama-bot-lint:
    executor: llama-bot-docker-executor
    steps:
      - restore_cache:
          key: llama-bot-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: npm run lint
  llama-bot-test:
    executor: llama-bot-docker-executor
    steps:
      - restore_cache:
          key: llama-bot-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Test
          command: npm run test
  llama-bot-deploy:
    machine:
       enabled: true
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Deploy master to prod
          command: if [ "${CIRCLE_BRANCH}" == "master" ]; then git push dokku@llama-bot-discord.com:llama-bot-discord master:master; else echo "Skipped"; fi
      - run:
          name: Deploy PR to dev
          command: if [ "${CIRCLE_BRANCH}" != "master" ] && [ "${CIRCLE_PULL_REQUEST##*/}" != "" ]; then git push dokku@llama-bot-discord.com:llama-bot-discord-dev; else echo "Skipped"; fi
  # llama-bot-api
  llama-bot-api-install:
    executor: llama-bot-api-docker-executor
    steps:
      - checkout:
          path: ~/llama-bot-discord
      # Try to restore dependencies from cache
      - restore_cache:
          keys:
            - llama-bot-api-nodemodules-v1-{{ checksum "package-lock.json" }}
            - llama-bot-api-nodemodules-v1-
      - run:
          name: Install dependencies
          command: npm install
      # Update dependencies cache
      - save_cache:
          key: llama-bot-api-nodemodules-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Save current workflow installed state in cache
      # .Environment.CIRCLE_SHA1 makes it unique for each build
      - save_cache:
          key: llama-bot-api-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./
  llama-bot-api-lint:
    executor: llama-bot-api-docker-executor
    steps:
      - restore_cache:
          key: llama-bot-api-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: npm run lint
  llama-bot-api-test:
    executor: llama-bot-api-docker-executor
    working_directory: llama-bot-api
    steps:
      - restore_cache:
          key: llama-bot-api-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build
          command: npm build
  llama-bot-api-build-publish:
    executor: llama-bot-api-docker-executor
    working_directory: llama-bot-api
    steps:
      - restore_cache:
          key: llama-bot-api-{{ .Environment.CIRCLE_SHA1 }}

workflows:
  version: 2
  llama-bot:
    jobs:
      - llama-bot-install
      - llama-bot-lint:
          requires:
            - llama-bot-install
      - llama-bot-test:
          requires:
            - llama-bot-install
      - llama-bot-deploy:
          requires:
            - llama-bot-lint
            - llama-bot-test
  # llama-bot-api:
  #   jobs:
  #     - llama-bot-api-lint
  #     - llama-bot-api-test
  #     - llama-bot-api-build-publish:
  #       requires:
  #         - llama-bot-api-lint
  #         - llama-bot-api-test
  # llama-bot-client:
  #   jobs:
  #     - llama-bot-api-lint
  #     - llama-bot-api-test
  #     - llama-bot-api-build
  #     - llama-bot-api-publish:
  #       - requires:
  #         - llama-bot-api-test
  #         - llama-bot-api-build
